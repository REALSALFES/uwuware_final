do  local ui =  game:GetService("CoreGui").RobloxGui.Modules.Server.ServerPlayer.DefaultServerPlayerModules:FindFirstChild("GalixUi")  if ui then ui:Destroy() end end

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local GalixUi = Instance.new("ScreenGui")
GalixUi.Name = "GalixUi"
GalixUi.Parent = game:GetService("CoreGui").RobloxGui.Modules.Server.ServerPlayer.DefaultServerPlayerModules
GalixUi.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

if syn then
	syn.protect_gui(game:GetService("CoreGui").RobloxGui.Modules.Server.ServerPlayer.DefaultServerPlayerModules:FindFirstChild("GalixUi"))
end

local function tablefound(ta, object)
	for i,v in pairs(ta) do
		if v == object then
			return true
		end
	end
	return false
end

local function MakeDraggable(topbarobject, object)
	local Dragging = nil
	local DragInput = nil
	local DragStart = nil
	local StartPosition = nil

	local function Update(input)
		local Delta = input.Position - DragStart
		local pos =
			UDim2.new(
				StartPosition.X.Scale,
				StartPosition.X.Offset + Delta.X,
				StartPosition.Y.Scale,
				StartPosition.Y.Offset + Delta.Y
			)
		local Tween = TweenService:Create(object, TweenInfo.new(0.2), {Position = pos})
		Tween:Play()
	end

	topbarobject.InputBegan:Connect(
		function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
				Dragging = true
				DragStart = input.Position
				StartPosition = object.Position

				input.Changed:Connect(
					function()
						if input.UserInputState == Enum.UserInputState.End then
							Dragging = false
						end
					end
				)
			end
		end
	)

	topbarobject.InputChanged:Connect(
		function(input)
			if
				input.UserInputType == Enum.UserInputType.MouseMovement or
				input.UserInputType == Enum.UserInputType.Touch
			then
				DragInput = input
			end
		end
	)

	UserInputService.InputChanged:Connect(
		function(input)
			if input == DragInput and Dragging then
				Update(input)
			end
		end
	)
end

local Create = {}
    function Create:window()
        local FocusUI = false ; -- tap

        local Main = Instance.new("Frame")
        Main.Name = "Main"
        Main.Parent = GalixUi
        Main.AnchorPoint = Vector2.new(0.5, 0.5)
        Main.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
        Main.Position = UDim2.new(0.5, 0, 0.5, 0)
        Main.Size = UDim2.new(0, 550, 0, 0) -- UDim2.new(0, 550, 0, 400)
		Main.ClipsDescendants = true
		
		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 8)
		UICorner.Parent = Main

        local PageTab = Instance.new("Frame")
        PageTab.Name = "PageTab"
        PageTab.Parent = Main
        PageTab.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
        PageTab.BorderSizePixel = 0
        PageTab.Size = UDim2.new(0, 550, 0, 40)

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 8)
		UICorner.Parent = PageTab

        local PageFrame = Instance.new("Frame")
        PageFrame.Name = "PageTab"
        PageFrame.Parent = PageTab
        PageFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 10)
        PageFrame.BorderSizePixel = 0
        PageFrame.Position = UDim2.new(0, 0, 0.535, 0)
        PageFrame.Size = UDim2.new(0, 550, 0, 20)

        local NameHub = Instance.new("TextLabel")
        NameHub.Name = "NameHub"
        NameHub.Parent = PageTab
        NameHub.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        NameHub.BackgroundTransparency = 1
        NameHub.Position = UDim2.new(0.075, 0, 0, 0)
        NameHub.Size = UDim2.new(0, 90, 0, 40)
        NameHub.Font = Enum.Font.GothamBold
        NameHub.Text = "GALIX HUB"
        NameHub.TextColor3 = Color3.fromRGB(20, 180, 255)
        NameHub.TextSize = 15.000
        NameHub.TextXAlignment = Enum.TextXAlignment.Left

        local Logo = Instance.new("ImageButton")
        Logo.Name = "Logo"
        Logo.Parent = PageTab
        Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Logo.BackgroundTransparency = 1.000
        Logo.BorderSizePixel = 0
        Logo.AnchorPoint = Vector2.new(0.5,0.5)
        Logo.Position = UDim2.new(0.035, 0, 0.5, 0)
        Logo.Size = UDim2.new(0, 35, 0, 35)
        Logo.Image = "http://www.roblox.com/asset/?id=11095032777"

        local Scrolling_PageTab = Instance.new("ScrollingFrame")
        Scrolling_PageTab.Name = "Scrolling_PageTab"
        Scrolling_PageTab.Parent = PageTab
        Scrolling_PageTab.Active = true
        Scrolling_PageTab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Scrolling_PageTab.BackgroundTransparency = 1.000
        Scrolling_PageTab.BorderSizePixel = 0
        Scrolling_PageTab.Position = UDim2.new(0.25, 0, 0, 0)
        Scrolling_PageTab.Size = UDim2.new(0, 420, 0, 45)
        Scrolling_PageTab.ScrollBarImageTransparency = 1
        Scrolling_PageTab.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
        Scrolling_PageTab.CanvasSize = UDim2.new(2, 0, 0, 0)
        Scrolling_PageTab.ScrollBarThickness = 4
        Scrolling_PageTab.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"

        local Logo_Tween = false ; 

		Logo.MouseButton1Click:Connect(function()
			if not Logo_Tween then
                TweenService:Create(
					Scrolling_PageTab,
					TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 0, 0, 45)}
				):Play() wait(0.5)
                TweenService:Create(
					Scrolling_PageTab,
					TweenInfo.new(0.1, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Visible = false}
				):Play()
                TweenService:Create(
					NameHub,
					TweenInfo.new(0.3, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
					{Visible = false}
				):Play() wait(0.3)
				TweenService:Create(
					Logo,
					TweenInfo.new(0.75, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Rotation = 360}
				):Play()
                TweenService:Create(
					Logo,
					TweenInfo.new(0.75, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Position = UDim2.new(0.5, 0, 0.5, 0)}
				):Play()
			else
				TweenService:Create(
					Logo,
					TweenInfo.new(0.75, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
                TweenService:Create(
					Logo,
					TweenInfo.new(0.75, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Position = UDim2.new(0.035, 0, 0.5, 0)}
				):Play() wait(0.75)
                TweenService:Create(
					NameHub,
					TweenInfo.new(0.3, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
					{Visible = true}
				):Play() wait(0.3)
                TweenService:Create(
					Scrolling_PageTab,
					TweenInfo.new(0.5, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 420, 0, 45)}
				):Play()
                TweenService:Create(
					Scrolling_PageTab,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Visible = true}
				):Play()
			end 
			Logo_Tween = not Logo_Tween
			callback(Logo_Tween) ; 
		end)

		local UIListLayout = Instance.new("UIListLayout")
		UIListLayout.Parent = Scrolling_PageTab
		UIListLayout.FillDirection = Enum.FillDirection.Horizontal
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 3)

		Scrolling_PageTab.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			Scrolling_PageTab.CanvasSize =  UDim2.new(0,UIListLayout.AbsoluteContentSize.X +10,0,0)
		end);

		local PageOrders = -1

		local Container_Page = Instance.new("Frame",Main)
		Container_Page.Name = ""
		Container_Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Container_Page.Size = UDim2.new(0, 550, 0, 350)
		Container_Page.BackgroundTransparency = 1
		Container_Page.Position = UDim2.new(0.5, 0, 0.5, 0)
		Container_Page.AnchorPoint = Vector2.new(0.5, 0.4525)
		Container_Page.ClipsDescendants = true
		
		local PageFolder = Instance.new("Folder")
		PageFolder.Parent = Container_Page

		local UIPage = Instance.new('UIPageLayout',PageFolder)
		UIPage.SortOrder = Enum.SortOrder.LayoutOrder
		UIPage.EasingDirection = Enum.EasingDirection.InOut
		UIPage.EasingStyle = Enum.EasingStyle.Circular
		UIPage.Padding = UDim.new(0, 500)
		UIPage.TweenTime = 0.350

		MakeDraggable(PageTab,Main)
		local tween = game:GetService("TweenService")
		local library = {currenttab = '',toggledui = false}
		tween:Create(Main,TweenInfo.new(1,Enum.EasingStyle.Circular),{Size = UDim2.new(0, 550, 0, 400)}):Play()
	
		game:GetService("UserInputService").InputBegan:Connect(function(input)
			if input.KeyCode == Enum.KeyCode.RightControl then 
				if library.toggledui == false then
					library.toggledui = true  
					tween:Create(Main,TweenInfo.new(0.5,Enum.EasingStyle.Circular,Enum.EasingDirection.In),{Size = UDim2.new(0, 550, 0, 0)}):Play()
					wait(0.5) Main.Visible = false
				else 
					library.toggledui = false
					Main.Visible = true
					tween:Create(Main,TweenInfo.new(0.5,Enum.EasingStyle.Circular),{Size = UDim2.new(0, 550, 0, 400)}):Play()
				end 
			end
		end)	

local Tab = {}
    function Tab:CreateTab(text)
        PageOrders = PageOrders + 1
		local name = tostring(text) or tostring(math.random(1,5000))

        local TextButton_Tab = Instance.new("TextButton")
        TextButton_Tab.Name = text.."Server"
        TextButton_Tab.Parent = Scrolling_PageTab
        TextButton_Tab.BackgroundColor3 = Color3.fromRGB(5, 5, 5)
        TextButton_Tab.BackgroundTransparency = 1
        TextButton_Tab.BorderSizePixel = 0
        TextButton_Tab.Size = UDim2.new(0, 100, 0, 40)
        TextButton_Tab.Font = Enum.Font.GothamMedium
        TextButton_Tab.TextColor3 = Color3.fromRGB(255,255,255)
        TextButton_Tab.TextSize = 14.000
        TextButton_Tab.AutoButtonColor = false
        TextButton_Tab.Text = tostring(text)

        local Line = Instance.new("Frame")
        Line.Name = "Line"
        Line.Parent = TextButton_Tab
        Line.BackgroundColor3 = Color3.fromRGB(20,180,255)
        Line.BackgroundTransparency = 1
        Line.AnchorPoint = Vector2.new(0.5,0.5)
        Line.Position = UDim2.new(0.5, 0, 1, 0)
        Line.BorderSizePixel = 0
        Line.Size = UDim2.new(0, 100, 0, 2)

        local Line1 = Instance.new("Frame")
        Line1.Name = "Line"
        Line1.Parent = TextButton_Tab
        Line1.BackgroundColor3 = Color3.fromRGB(20,180,255)
        Line1.BackgroundTransparency = 1
        Line1.AnchorPoint = Vector2.new(0.5,0.5)
        Line1.Position = UDim2.new(0.5, 0, 1, 0)
        Line1.BorderSizePixel = 0
        Line1.Size = UDim2.new(0, 100, 0, 2)

        local PageMain = Instance.new("Frame")
		PageMain.Name = name.."_PageMain"
		PageMain.Parent = PageFolder
        PageMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PageMain.BackgroundTransparency = 1.000
        PageMain.Position = UDim2.new(0, 0, 0.125, 0)
        PageMain.Size = UDim2.new(0, 550, 0, 350)
        PageMain.Visible = true
		PageMain.ClipsDescendants = true
		PageMain.LayoutOrder = PageOrders
		PageMain.ClipsDescendants = true

        local Scrolling_PageMain = Instance.new("ScrollingFrame")
        Scrolling_PageMain.Parent = PageMain
        Scrolling_PageMain.Active = true
        Scrolling_PageMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Scrolling_PageMain.BackgroundTransparency = 1
        Scrolling_PageMain.Size = UDim2.new(0, 550, 0, 355)
        Scrolling_PageMain.ScrollBarImageTransparency = 1
        Scrolling_PageMain.BorderSizePixel = 0
        Scrolling_PageMain.BottomImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
        Scrolling_PageMain.CanvasSize = UDim2.new(0, 0, 0, 0)
        Scrolling_PageMain.ScrollBarThickness = 4
        Scrolling_PageMain.TopImage = "rbxasset://textures/ui/Scroll/scroll-middle.png"
		Scrolling_PageMain.ClipsDescendants = true
		
        local UIListLayout = Instance.new("UIListLayout")
        UIListLayout.Parent = Scrolling_PageMain
        UIListLayout.FillDirection = Enum.FillDirection.Horizontal
        UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout.Padding = UDim.new(0, 10)
        
        local UIPadding = Instance.new("UIPadding")
        UIPadding.Parent = Scrolling_PageMain
        UIPadding.PaddingLeft = UDim.new(0, 10)
        UIPadding.PaddingTop = UDim.new(0, 10)

        local PageLeft = Instance.new("Frame")
        PageLeft.Parent = Scrolling_PageMain
        PageLeft.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PageLeft.BackgroundTransparency = 1
        PageLeft.BorderSizePixel = 0
        PageLeft.Size = UDim2.new(0, 260, 0, 340)
    
        local UIListLayout_Pageleft = Instance.new("UIListLayout")
        UIListLayout_Pageleft.Parent = PageLeft
        UIListLayout_Pageleft.FillDirection = Enum.FillDirection.Vertical
        UIListLayout_Pageleft.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout_Pageleft.Padding = UDim.new(0, 5)

        local PageRight = Instance.new("Frame")
        PageRight.Parent = Scrolling_PageMain
        PageRight.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        PageRight.BackgroundTransparency = 1
        PageRight.BorderSizePixel = 0
        PageRight.Size = UDim2.new(0, 260, 0, 350)

        local UIListLayout_Pageright = Instance.new("UIListLayout")
        UIListLayout_Pageright.Parent = PageRight
        UIListLayout_Pageright.FillDirection = Enum.FillDirection.Vertical
        UIListLayout_Pageright.SortOrder = Enum.SortOrder.LayoutOrder
        UIListLayout_Pageright.Padding = UDim.new(0, 5)

        UIListLayout_Pageleft:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            if UIListLayout_Pageleft.AbsoluteContentSize.Y > UIListLayout_Pageright.AbsoluteContentSize.Y then
                Scrolling_PageMain.CanvasSize = UDim2.new(0, 0, 0, UIListLayout_Pageleft.AbsoluteContentSize.Y + 10)
            end
        end)
        UIListLayout_Pageright:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            if UIListLayout_Pageright.AbsoluteContentSize.Y > UIListLayout_Pageleft.AbsoluteContentSize.Y then
                Scrolling_PageMain.CanvasSize = UDim2.new(0, 0, 0, UIListLayout_Pageright.AbsoluteContentSize.Y + 10)
            end
        end)

		TextButton_Tab.MouseButton1Click:connect(function()
			if PageMain.Name == text.."_PageMain" then
				UIPage:JumpToIndex(PageMain.LayoutOrder)
			end

			for i ,v in next , Scrolling_PageTab:GetChildren() do
				if v:IsA("TextButton") then
					for o,p in pairs(v:GetChildren()) do
						TweenService:Create(
							v,
							TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
							{BackgroundTransparency =  1}
						):Play()
						TweenService:Create(
							v,
							TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
							{TextColor3 = Color3.fromRGB(255,255,255)}
						):Play()
						TweenService:Create(
							p,
							TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
							{BackgroundTransparency =  1}
						):Play()
					end
				end
				TweenService:Create(
					TextButton_Tab,
					TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
					{BackgroundTransparency =  0.5}
				):Play()
				TweenService:Create(
					TextButton_Tab,
					TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(20,180,255)}
				):Play()
				TweenService:Create(
					Line,
					TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
					{BackgroundTransparency =  0}
				):Play()
			end
		end)
		if FocusUI == false then
			TweenService:Create(
				TextButton_Tab,
				TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
				{BackgroundTransparency =  0.5}
			):Play()
			TweenService:Create(
				TextButton_Tab,
				TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(20,180,255)}
			):Play()
			TweenService:Create(
				Line,
				TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
				{BackgroundTransparency =  0}
			):Play()

			PageMain.Visible = true
			TextButton_Tab.Name = text .. "Server"
			FocusUI  = true
		end

        TextButton_Tab.MouseEnter:Connect(function()
			TweenService:Create(
				Line1,
				TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
				{BackgroundTransparency =  0}
			):Play()
		end)
		TextButton_Tab.MouseLeave:Connect(function()
			TweenService:Create(
				Line1,
				TweenInfo.new(0.5, Enum.EasingStyle.Circular, Enum.EasingDirection.Out),
				{BackgroundTransparency =  1}
			):Play()
		end)

local Page = {}
    function Page:CreatePage(Type,text)
        local function GetType(value)
			if value == 1 then
				return PageLeft
			elseif value == 2 then
				return PageRight
			else
				return PageLeft
			end
		end

        local Page = Instance.new("Frame")
		Page.Parent = GetType(Type)
		Page.BackgroundColor3 = Color3.fromRGB(10,10,10)
		Page.BackgroundTransparency = 0
		Page.BorderSizePixel = 0
		Page.AnchorPoint = Vector2.new(0.5,0.5)
		Page.Position = UDim2.new(0.5, 0, 0.5, 0)
        Page.Size = UDim2.new(0, 260, 0, 345)
		Page.Visible = true
		Page.ClipsDescendants = true

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Parent = Page

        local PageFrame = Instance.new("Frame")
		PageFrame.Parent = Page
		PageFrame.BackgroundColor3 = Color3.fromRGB(110,10,10)
		PageFrame.BackgroundTransparency = 1
		PageFrame.BorderSizePixel = 0
		PageFrame.AnchorPoint = Vector2.new(0.5,0.5)
		PageFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
        PageFrame.Size = UDim2.new(0, 250, 0, 30)

		local Name_Page = Instance.new("TextLabel")
		Name_Page.Parent = PageFrame
		Name_Page.BackgroundColor3 = Color3.fromRGB(10,140,255)
		Name_Page.BackgroundTransparency = 1
		Name_Page.BorderSizePixel = 0
		Name_Page.Size = UDim2.new(0, 250, 0, 20)
        Name_Page.AnchorPoint = Vector2.new(0.5,0.5)
		Name_Page.Position = UDim2.new(0.5, 0, 0.45, 0)
		Name_Page.Font = Enum.Font.GothamBold
		Name_Page.TextColor3 = Color3.fromRGB(255,255,255)
		Name_Page.Text = tostring(text)
		Name_Page.TextSize = 14
		Name_Page.TextXAlignment = Enum.TextXAlignment.Center

        local PageLine = Instance.new("Frame")
		PageLine.Parent = PageFrame
		PageLine.BackgroundColor3 = Color3.fromRGB(20,180,255)
		PageLine.BackgroundTransparency = 0
		PageLine.BorderSizePixel = 0
        PageLine.AnchorPoint = Vector2.new(0.5,0.5)
		PageLine.Position = UDim2.new(0.5, 0, 0.9, 0)
        PageLine.Size = UDim2.new(0, 250, 0, 2)

		local UIListLayout = Instance.new("UIListLayout")
		UIListLayout.Parent = Page
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 5)

		local UIPaddingPage = Instance.new("UIPadding")
		UIPaddingPage.Parent = Page
		UIPaddingPage.PaddingLeft = UDim.new(0, 5)
		UIPaddingPage.PaddingTop = UDim.new(0, 5)

		UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
			Page.Size =  UDim2.new(0, 260, 0,UIListLayout.AbsoluteContentSize.Y + 10)
		end);

local Items = {} ;
	function Items:Label(text)
		local Labelfuc = {}
		local Label_Main = Instance.new("TextLabel")
		Label_Main.Parent = Page
		Label_Main.BackgroundColor3 = Color3.fromRGB(10,140,255)
		Label_Main.BackgroundTransparency = 1
		Label_Main.BorderSizePixel = 0
		Label_Main.AnchorPoint = Vector2.new(0.5,0.5)
		Label_Main.Position = UDim2.new(0.5, 0, 0.5, 0)
		Label_Main.Size = UDim2.new(0, 265, 0, 25)
		Label_Main.Font = Enum.Font.GothamMedium
		Label_Main.TextColor3 = Color3.fromRGB(255,255,255)
		Label_Main.Text = tostring(text)
		Label_Main.TextSize = 14.000
	
		function  Labelfuc:Change(text)
			Label_Main.Text = tostring(text)
		end
		return Labelfuc
		end
	function Items:Button(text,callback)
		local Button_Frame = Instance.new("TextButton")
		Button_Frame.Parent = Page
		Button_Frame.BackgroundColor3 = Color3.fromRGB(255,255,255)
		Button_Frame.BackgroundTransparency = 1
		Button_Frame.BorderSizePixel = 0
		Button_Frame.AnchorPoint = Vector2.new(0.5,0.5)
		Button_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
		Button_Frame.Size = UDim2.new(0, 250, 0, 25)
		Button_Frame.Font = Enum.Font.GothamMedium
		Button_Frame.TextColor3 = Color3.fromRGB(255,255,255)
		Button_Frame.Text = ""
		Button_Frame.TextSize = 14.000

		local Button_Main = Instance.new("TextButton")
		Button_Main.Parent = Button_Frame
		Button_Main.BackgroundColor3 = Color3.fromRGB(20,180,255)
		Button_Main.BackgroundTransparency = 0
		Button_Main.BorderSizePixel = 0
		Button_Main.AnchorPoint = Vector2.new(0.5,0.5)
		Button_Main.Position = UDim2.new(0.5, 0, 0.5, 0)
		Button_Main.Size = UDim2.new(0, 250, 0, 25)
		Button_Main.Font = Enum.Font.GothamMedium
		Button_Main.TextColor3 = Color3.fromRGB(255,255,255)
		Button_Main.Text = tostring(text)
		Button_Main.TextSize = 14.000
        Button_Main.AutoButtonColor = false

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Name = ""
		UICorner.Parent = Button_Main

		Button_Main.MouseButton1Click:Connect(function()
			TweenService:Create(
				Button_Main,
				TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
				{Size = UDim2.new(0, 230, 0, 25)}
			):Play() wait(0.1)
			TweenService:Create(
				Button_Main,
				TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In),
				{Size = UDim2.new(0, 250, 0, 25)}
			):Play()
			TweenService:Create(
				Button_Main,
				TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
				{TextSize = 10}
			):Play() wait(0.1)
			TweenService:Create(
				Button_Main,
				TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
				{TextSize = 14}
			):Play()
			callback()
		end)
		end

	function Items:Toggle(text,Stats,callback)
		local Toggle_Main = Instance.new("Frame")
		Toggle_Main.Parent = Page
		Toggle_Main.BackgroundColor3 = Color3.fromRGB(20,20,20)
        Toggle_Main.BackgroundTransparency = 0
		Toggle_Main.BorderSizePixel = 0
		Toggle_Main.AnchorPoint = Vector2.new(0.5,0.5)
		Toggle_Main.Position = UDim2.new(0.5, 0, 0.5, 0)
		Toggle_Main.Size = UDim2.new(0, 250, 0, 35)

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Name = ""
		UICorner.Parent = Toggle_Main

		local TextButton_Toggle = Instance.new("TextButton")
		TextButton_Toggle.Parent = Toggle_Main
		TextButton_Toggle.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
		TextButton_Toggle.BackgroundTransparency = 1.000
		TextButton_Toggle.BorderSizePixel = 0
		TextButton_Toggle.AnchorPoint = Vector2.new(0.5,0.5)
		TextButton_Toggle.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextButton_Toggle.Size = UDim2.new(0, 230, 0, 35)
		TextButton_Toggle.Font = Enum.Font.GothamMedium
		TextButton_Toggle.TextColor3 = Color3.fromRGB(100,100,100)
		TextButton_Toggle.Text = tostring(text)
		TextButton_Toggle.TextSize = 14.000
		TextButton_Toggle.TextXAlignment = Enum.TextXAlignment.Left
		
		local Toggle_Frame = Instance.new("Frame")
		Toggle_Frame.Parent = TextButton_Toggle
		Toggle_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
		Toggle_Frame.AnchorPoint = Vector2.new(0.5,0.5)
		Toggle_Frame.Position = UDim2.new(0.95, 0, 0.5, 0)
		Toggle_Frame.Size = UDim2.new(0, 22, 0, 22)

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 360)
		UICorner.Name = ""
		UICorner.Parent = Toggle_Frame

		local Toggle1 = Instance.new("Frame")
		Toggle1.Parent = TextButton_Toggle
		Toggle1.BackgroundColor3 = Color3.fromRGB(15,15,15)
		Toggle1.AnchorPoint = Vector2.new(0.5,0.5)
		Toggle1.Position = UDim2.new(0.95, 0, 0.5, 0)
		Toggle1.Size = UDim2.new(0, 18, 0, 18)
        
		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 360)
		UICorner.Name = ""
		UICorner.Parent = Toggle1
		-- Lock Function
		local lockerframe = Instance.new("Frame")
		lockerframe.Name = "lockerframe"
		lockerframe.Parent = Toggle_Main
		lockerframe.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		lockerframe.BackgroundTransparency = 1
		lockerframe.Size = UDim2.new(0, 250, 0, 35)
		lockerframe.Position = UDim2.new(0.5, 0, 0.5, 0)
		lockerframe.AnchorPoint = Vector2.new(0.5, 0.5)

		local UICorner_Toggle = Instance.new("UICorner")
		UICorner_Toggle.CornerRadius = UDim.new(0, 5)
		UICorner_Toggle.Parent = lockerframe

		local LockerImage = Instance.new("ImageLabel")
		LockerImage.Parent = lockerframe
		LockerImage.BackgroundTransparency = 1.000
		LockerImage.BorderSizePixel = 0
		LockerImage.Position = UDim2.new(0.5, 0, 0.5, 0)
		LockerImage.AnchorPoint = Vector2.new(0.5, 0.5)
		LockerImage.Size = UDim2.new(0, 0, 0, 0)
		LockerImage.Image = "http://www.roblox.com/asset/?id=7072718362"
		LockerImage.ImageColor3 = Color3.fromRGB(20,180,255)
		--
		local check = {Toggle = false ; lock = true ; togglefunction = {}; }
		TextButton_Toggle.MouseButton1Down:Connect(function()
			if check.Toggle == false  and check.lock == true  then ------- true
				TweenService:Create(
					TextButton_Toggle,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(255,255,255)}
				):Play()
				TweenService:Create(
					Toggle1,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(20,180,255)}
				):Play()
			elseif check.lock == true then
				TweenService:Create(
					TextButton_Toggle,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(100,100,100)}
				):Play()
				TweenService:Create(
					Toggle1,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(15,15,15)}
				):Play()
			end
			if check.lock == true then
				check.Toggle = not check.Toggle
				pcall(callback,check.Toggle)
			end
		end)
		TextButton_Toggle.MouseEnter:Connect(function()
			if check.Toggle == false and check.lock == true then
				TweenService:Create(
					TextButton_Toggle,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(255,255,255)}
				):Play()
				TweenService:Create(
					Toggle1,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(20,180,255)}
				):Play()
			end
		end)
		TextButton_Toggle.MouseLeave:Connect(function()
			if check.Toggle == false then
				TweenService:Create(
					TextButton_Toggle,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(100,100,100)}
				):Play()
				TweenService:Create(
					Toggle1,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{BackgroundColor3 = Color3.fromRGB(15,15,15)}
				):Play()
			end
		end)
		if Stats == true then
			TweenService:Create(
				TextButton_Toggle,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()
			TweenService:Create(
				Toggle1,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{BackgroundColor3 = Color3.fromRGB(20,180,255)}
			):Play()
			check.Toggle = not check.Toggle
			pcall(callback,check.Toggle)
		end
		-- Function Lock
		function check.togglefunction:lock()
			TweenService:Create(
				lockerframe,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
				{BackgroundTransparency = 0.5}
			):Play() wait(0.2)
			--
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
				{Size = UDim2.new(0, 20, 0, 20)}
			):Play()
			-- Tween Lock
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = -50}
			):Play() wait(0.3)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = 50}
			):Play() wait(0.2)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = -30}
			):Play() wait(0.2)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = 30}
			):Play() wait(0.2)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = 0}
			):Play() wait(0.1)
			check.lock  = false
		end
		function check.togglefunction:unlock()
			TweenService:Create(
				lockerframe,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
				{BackgroundTransparency = 1}
			):Play() wait(0.2)
			-- Tween UnLock
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = -30}
			):Play() wait(0.3)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = 30}
			):Play() wait(0.2)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = -50}
			):Play() wait(0.2)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = 50}
			):Play() wait(0.2)
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Rotation = 0}
			):Play() wait(0.1)
			--
			TweenService:Create(
				LockerImage,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
				{Size = UDim2.new(0, 0, 0, 0)}
			):Play()
			check.lock  = true
		end
		-- Tween
		Toggle_Main.MouseEnter:Connect(function()
			if check.lock == false then
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = -50}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 50}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = -70}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 70}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = -30}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 30}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
			end
		end)
		Toggle_Main.MouseLeave:Connect(function()
			if check.lock == false then
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 50}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = -50}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 70}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = -70}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 30}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.6, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = -30}
				):Play() wait(0.3)
				TweenService:Create(
					LockerImage,
					TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
			end
			--
		end)
		    return  check.togglefunction
		end

	function Items:Dropdown(text,option,default,callback)
		local defaultt = default or ""
		local Drop_Frame = Instance.new("Frame")
		Drop_Frame.Name = "DropFrame"
		Drop_Frame.Parent = Page
		Drop_Frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
		Drop_Frame.BackgroundTransparency = 0
		Drop_Frame.BorderSizePixel = 0
		Drop_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
		Drop_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
		Drop_Frame.Size = UDim2.new(0, 250, 0, 35)
		Drop_Frame.ClipsDescendants = true

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Name = ""
		UICorner.Parent = Drop_Frame

		local TextLabe_DropDown = Instance.new("TextLabel")
		TextLabe_DropDown.Name = "LabelFrameDrop"
		TextLabe_DropDown.Parent = Drop_Frame
		TextLabe_DropDown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabe_DropDown.BackgroundTransparency = 1
		TextLabe_DropDown.Position = UDim2.new(0.05, 0, 0.025, 0)
		TextLabe_DropDown.Size = UDim2.new(0, 230, 0, 35)
		TextLabe_DropDown.Font = Enum.Font.GothamMedium
		TextLabe_DropDown.TextColor3 = Color3.fromRGB(100,100,100)
		TextLabe_DropDown.TextSize = 14
		TextLabe_DropDown.TextWrapped = true
		TextLabe_DropDown.TextXAlignment = Enum.TextXAlignment.Left
		TextLabe_DropDown.Text = tostring(text).." :"

		function getpro()
			if default then
				if table.find(option, default) then
					pcall(callback, default)
					return tostring(text).." : " .. default
				else
					return text
				end
			else
				return text
			end
		end
		TextLabe_DropDown.Text = getpro()
		local Icon = Instance.new("ImageLabel")
		Icon.Name = "Icon"
		Icon.Parent = TextLabe_DropDown
		Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Icon.BackgroundTransparency = 1.000
		Icon.AnchorPoint = Vector2.new(0.5,0.5)
		Icon.Position = UDim2.new(0.945, 0, 0.5, 0)
		Icon.Rotation = 0
		Icon.Size = UDim2.new(0, 12, 0, 12)
		Icon.Image = "http://www.roblox.com/asset/?id=10815258127"
		Icon.ImageColor3 = Color3.fromRGB(100,100,100)

		local Scrolling_Drop = Instance.new("ScrollingFrame")
		Scrolling_Drop.Name = "Scrolling_Drop"
		Scrolling_Drop.Parent = TextLabe_DropDown
		Scrolling_Drop.Active = true
		Scrolling_Drop.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Scrolling_Drop.BackgroundTransparency = 1
		Scrolling_Drop.BorderSizePixel = 0
		Scrolling_Drop.AnchorPoint = Vector2.new(0.5,0.5)
		Scrolling_Drop.Position = UDim2.new(0.5, 0, 2.7, 0)
		Scrolling_Drop.Size = UDim2.new(0, 250, 0, 125)
		Scrolling_Drop.CanvasSize = UDim2.new(0, 0, 0, 2)
		Scrolling_Drop.ScrollBarThickness = 1
		Scrolling_Drop.ScrollBarImageTransparency = 1

		local UIListLayout = Instance.new("UIListLayout")
		UIListLayout.Name = "UIListLayout"
		UIListLayout.Parent = Scrolling_Drop
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 6)

		local UIPaddinglist = Instance.new("UIPadding")
		UIPaddinglist.Name = "UIPaddinglist"
		UIPaddinglist.Parent = Scrolling_Drop
		UIPaddinglist.PaddingTop = UDim.new(0, 5)

		local Button_Drop = Instance.new("TextButton")
		Button_Drop.Name = "ButtonDrop"
		Button_Drop.Parent = Drop_Frame
		Button_Drop.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Button_Drop.BackgroundTransparency = 1
		Button_Drop.ClipsDescendants = true
		Button_Drop.Size = UDim2.new(0, 220, 0, 35)
		Button_Drop.Font = Enum.Font.SourceSans
		Button_Drop.Text = ""
		Button_Drop.TextColor3 = Color3.fromRGB(0, 0, 0)
		Button_Drop.TextSize = 14.000
		
		local dog = false
		local droptween = true
		local FrameSize = 150
		local cout = 0
		for i , v in pairs(option) do
			cout =cout + 1
			if cout == 1 then
				FrameSize = 150
			elseif cout == 2 then
				FrameSize = 150
			elseif cout >= 3 then
				FrameSize = 150
			end

		local Button_Frame = Instance.new("Frame")
		Button_Frame.Name = "ListFrame"
		Button_Frame.Parent = Scrolling_Drop
		Button_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
		Button_Frame.BackgroundTransparency = 1
		Button_Frame.BorderSizePixel = 0
		Button_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
		Button_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
		Button_Frame.Size = UDim2.new(0, 250, 0, 30)

		local Dropdown_Button = Instance.new("TextButton")
		Dropdown_Button.Name = "Dropdwon_Button"
		Dropdown_Button.Parent = Button_Frame
		Dropdown_Button.AnchorPoint = Vector2.new(0.5, 0.5)
		Dropdown_Button.BackgroundColor3 = Color3.fromRGB(15,15,15)
		Dropdown_Button.BackgroundTransparency = 0
		Dropdown_Button.BorderSizePixel = 0
		Dropdown_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
		Dropdown_Button.Size = UDim2.new(0, 230, 0, 30)
		Dropdown_Button.Font = Enum.Font.GothamSemibold
		Dropdown_Button.TextColor3 = Color3.fromRGB(136, 136, 138)
		Dropdown_Button.TextSize = 14
		Dropdown_Button.TextXAlignment = Enum.TextXAlignment.Left
		Dropdown_Button.Text = ""

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Name = ""
		UICorner.Parent = Dropdown_Button

		local TextLabel_Button = Instance.new("TextLabel")
		TextLabel_Button.Name = "TextLabel_TapDro2p"
		TextLabel_Button.Parent = Dropdown_Button
		TextLabel_Button.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel_Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_Button.BackgroundTransparency = 1
		TextLabel_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextLabel_Button.Size = UDim2.new(0, 210, 0, 30)
		TextLabel_Button.Font = Enum.Font.GothamSemibold
		TextLabel_Button.TextColor3 = Color3.fromRGB(100,100,100)
		TextLabel_Button.TextSize = 14
		TextLabel_Button.TextXAlignment = Enum.TextXAlignment.Left
		TextLabel_Button.Text = tostring(v)

		Dropdown_Button.MouseButton1Click:Connect(function()
			TweenService:Create(
				TextLabe_DropDown,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()
			TweenService:Create(
				Icon,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{ImageColor3 = Color3.fromRGB(255,255,255)}
			):Play()
			TweenService:Create(
				Drop_Frame,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{Size = UDim2.new(0, 250, 0, 35)}
			):Play()
			TweenService:Create(
				Icon,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{Rotation = 0}
			):Play()
				TextLabe_DropDown.Text =  text.." : "..tostring(v)
				callback(v)
				dog = not dog
				droptween = false
			end)
			Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20 )
		end
		Button_Drop.MouseButton1Click:Connect(function()
			if dog == false then
				TweenService:Create(
					Drop_Frame,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 250, 0, FrameSize)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Rotation = 90}
				):Play()
				Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20  )
			else
				TweenService:Create(
					Drop_Frame,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 250, 0, 35)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
				Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20  )
			end
			dog = not dog
		end)
		Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20  )
		local dropfunc = {}
		-- Tween
		Drop_Frame.MouseEnter:Connect(function()
			if droptween == true then
				TweenService:Create(
					TextLabe_DropDown,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out,0.1),
					{TextColor3 = Color3.fromRGB(255,255,255)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(255,255,255)}
				):Play()
			end
		end)
		Drop_Frame.MouseLeave:Connect(function()
			if droptween == true then
				TweenService:Create(
					TextLabe_DropDown,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out,0.1),
					{TextColor3 = Color3.fromRGB(100,100,100)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(100,100,100)}
				):Play()
			end
		end)
		function dropfunc:Clear()
			TextLabe_DropDown.Text = tostring(text).." :"
			TweenService:Create(
				TextLabe_DropDown,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(100,100,100)}
			):Play()
			TweenService:Create(
				Icon,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{ImageColor3 = Color3.fromRGB(100,100,100)}
			):Play()
			TweenService:Create(
				Drop_Frame,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{Size = UDim2.new(0, 250, 0, 35)}
			):Play()
			TweenService:Create(
				Icon,
				TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{Rotation = 0}
			):Play()
			dog = not dog
			droptween = true
			for i, v in next, Scrolling_Drop:GetChildren() do
				if v:IsA("Frame") then
					v:Destroy()
				end
			end
		end
		function dropfunc:Add(t)
			local Button_Frame = Instance.new("Frame")
			Button_Frame.Name = "ListFrame"
			Button_Frame.Parent = Scrolling_Drop
			Button_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
			Button_Frame.BackgroundTransparency = 1
			Button_Frame.BorderSizePixel = 0
			Button_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
			Button_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
			Button_Frame.Size = UDim2.new(0, 250, 0, 30)
	
			local Dropdown_Button = Instance.new("TextButton")
			Dropdown_Button.Name = "Dropdwon_Button"
			Dropdown_Button.Parent = Button_Frame
			Dropdown_Button.AnchorPoint = Vector2.new(0.5, 0.5)
			Dropdown_Button.BackgroundColor3 = Color3.fromRGB(15,15,15)
			Dropdown_Button.BackgroundTransparency = 0
			Dropdown_Button.BorderSizePixel = 0
			Dropdown_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
			Dropdown_Button.Size = UDim2.new(0, 230, 0, 30)
			Dropdown_Button.Font = Enum.Font.GothamSemibold
			Dropdown_Button.TextColor3 = Color3.fromRGB(136, 136, 138)
			Dropdown_Button.TextSize = 14
			Dropdown_Button.TextXAlignment = Enum.TextXAlignment.Left
			Dropdown_Button.Text = ""
	
			local UICorner = Instance.new("UICorner")
			UICorner.CornerRadius = UDim.new(0, 5)
			UICorner.Name = ""
			UICorner.Parent = Dropdown_Button
	
			local TextLabel_Button = Instance.new("TextLabel")
			TextLabel_Button.Name = "TextLabel_TapDro2p"
			TextLabel_Button.Parent = Dropdown_Button
			TextLabel_Button.AnchorPoint = Vector2.new(0.5, 0.5)
			TextLabel_Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel_Button.BackgroundTransparency = 1
			TextLabel_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
			TextLabel_Button.Size = UDim2.new(0, 210, 0, 30)
			TextLabel_Button.Font = Enum.Font.GothamSemibold
			TextLabel_Button.TextColor3 = Color3.fromRGB(100,100,100)
			TextLabel_Button.TextSize = 14
			TextLabel_Button.TextXAlignment = Enum.TextXAlignment.Left
			TextLabel_Button.Text = tostring(t)

			Dropdown_Button.MouseButton1Click:Connect(function()
				TweenService:Create(
					TextLabe_DropDown,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{TextColor3 = Color3.fromRGB(255,255,255)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(255,255,255)}
				):Play()
				TweenService:Create(
					Drop_Frame,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 250, 0, 35)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.3, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
				TextLabe_DropDown.Text =  text.." : "..tostring(t)
				callback(t)
				dog = not dog
				droptween = false
			end)
			Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20)
		end
			return dropfunc
		end

	function Items:MultiDropdown(text,option,default,callback)
		local defaultt = default or {}
		local MultiDropdownTable = {}

		local Drop_Frame = Instance.new("Frame")
		Drop_Frame.Name = "DropFrame"
		Drop_Frame.Parent = Page
		Drop_Frame.BackgroundColor3 = Color3.fromRGB(20,20,20)
		Drop_Frame.BackgroundTransparency = 0
		Drop_Frame.BorderSizePixel = 0
		Drop_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
		Drop_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
		Drop_Frame.Size = UDim2.new(0, 250, 0, 35)
		Drop_Frame.ClipsDescendants = true

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Name = ""
		UICorner.Parent = Drop_Frame

		local TextLabe_DropDown = Instance.new("TextLabel")
		TextLabe_DropDown.Name = "LabelFrameDrop"
		TextLabe_DropDown.Parent = Drop_Frame
		TextLabe_DropDown.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabe_DropDown.BackgroundTransparency = 1
		TextLabe_DropDown.Position = UDim2.new(0.05, 0, 0.025, 0)
		TextLabe_DropDown.Size = UDim2.new(0, 230, 0, 35)
		TextLabe_DropDown.Font = Enum.Font.GothamMedium
		TextLabe_DropDown.TextColor3 = Color3.fromRGB(100,100,100)
		TextLabe_DropDown.TextSize = 14
		TextLabe_DropDown.TextWrapped = true
		TextLabe_DropDown.TextXAlignment = Enum.TextXAlignment.Left
		TextLabe_DropDown.Text = tostring(text).." :"

		function getpro()
			if default then
				if table.find(option, default) then
					pcall(callback, default)
					return tostring(text).." : " .. default
				else
					return text
				end
			else
				return text
			end
		end
		TextLabe_DropDown.Text = getpro()

		local Icon = Instance.new("ImageLabel")
		Icon.Name = "Icon"
		Icon.Parent = TextLabe_DropDown
		Icon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Icon.BackgroundTransparency = 1.000
		Icon.AnchorPoint = Vector2.new(0.5,0.5)
		Icon.Position = UDim2.new(0.945, 0, 0.5, 0)
		Icon.Rotation = 0
		Icon.Size = UDim2.new(0, 12, 0, 12)
		Icon.Image = "http://www.roblox.com/asset/?id=10815258127"
		Icon.ImageColor3 = Color3.fromRGB(100,100,100)

		local Scrolling_Drop = Instance.new("ScrollingFrame")
		Scrolling_Drop.Name = "Scrolling_Drop"
		Scrolling_Drop.Parent = TextLabe_DropDown
		Scrolling_Drop.Active = true
		Scrolling_Drop.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Scrolling_Drop.BackgroundTransparency = 1
		Scrolling_Drop.BorderSizePixel = 0
		Scrolling_Drop.AnchorPoint = Vector2.new(0.5,0.5)
		Scrolling_Drop.Position = UDim2.new(0.5, 0, 2.7, 0)
		Scrolling_Drop.Size = UDim2.new(0, 250, 0, 125)
		Scrolling_Drop.CanvasSize = UDim2.new(0, 0, 0, 2)
		Scrolling_Drop.ScrollBarThickness = 1
		Scrolling_Drop.ScrollBarImageTransparency = 1

		local UIListLayout = Instance.new("UIListLayout")
		UIListLayout.Name = "UIListLayout"
		UIListLayout.Parent = Scrolling_Drop
		UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
		UIListLayout.Padding = UDim.new(0, 6)

		local UIPaddinglist = Instance.new("UIPadding")
		UIPaddinglist.Name = "UIPaddinglist"
		UIPaddinglist.Parent = Scrolling_Drop
		UIPaddinglist.PaddingTop = UDim.new(0, 5)

		local Button_Drop = Instance.new("TextButton")

		Button_Drop.Name = "ButtonDrop"
		Button_Drop.Parent = Drop_Frame
		Button_Drop.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Button_Drop.BackgroundTransparency = 1
		Button_Drop.ClipsDescendants = true
		Button_Drop.Size = UDim2.new(0, 220, 0, 35)
		Button_Drop.Font = Enum.Font.SourceSans
		Button_Drop.Text = ""
		Button_Drop.TextColor3 = Color3.fromRGB(0, 0, 0)
		Button_Drop.TextSize = 14.000

		local dog = false
		local droptween = true

		local FrameSize = 60
		local cout = 0
		for i , v in pairs(option) do
			cout =cout + 1
			if cout == 1 then
				FrameSize = 150
			elseif cout == 2 then
				FrameSize = 150
			elseif cout >= 3 then
				FrameSize = 150
			end

		local Button_Frame = Instance.new("Frame")
		Button_Frame.Name = "ListFrame"
		Button_Frame.Parent = Scrolling_Drop
		Button_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
		Button_Frame.BackgroundTransparency = 1
		Button_Frame.BorderSizePixel = 0
		Button_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
		Button_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
		Button_Frame.Size = UDim2.new(0, 250, 0, 30)

		local Dropdown_Button = Instance.new("TextButton")
		Dropdown_Button.Name = "Dropdwon_Button"
		Dropdown_Button.Parent = Button_Frame
		Dropdown_Button.AnchorPoint = Vector2.new(0.5, 0.5)
		Dropdown_Button.BackgroundColor3 = Color3.fromRGB(15,15,15)
		Dropdown_Button.BackgroundTransparency = 0
		Dropdown_Button.BorderSizePixel = 0
		Dropdown_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
		Dropdown_Button.Size = UDim2.new(0, 230, 0, 30)
		Dropdown_Button.Font = Enum.Font.GothamSemibold
		Dropdown_Button.TextColor3 = Color3.fromRGB(136, 136, 138)
		Dropdown_Button.TextSize = 14
		Dropdown_Button.TextXAlignment = Enum.TextXAlignment.Left
		Dropdown_Button.Text = ""

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Name = ""
		UICorner.Parent = Dropdown_Button

		local TextLabel_Button = Instance.new("TextLabel")
		TextLabel_Button.Name = "TextLabel_TapDrop"
		TextLabel_Button.Parent = Dropdown_Button
		TextLabel_Button.AnchorPoint = Vector2.new(0.5, 0.5)
		TextLabel_Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextLabel_Button.BackgroundTransparency = 1
		TextLabel_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextLabel_Button.Size = UDim2.new(0, 210, 0, 30)
		TextLabel_Button.Font = Enum.Font.GothamSemibold
		TextLabel_Button.TextColor3 = Color3.fromRGB(100,100,100)
		TextLabel_Button.TextSize = 14
		TextLabel_Button.TextXAlignment = Enum.TextXAlignment.Left
		TextLabel_Button.Text = tostring(v)

		local Line_Frame = Instance.new("Frame")
		Line_Frame.Name = "ListFrame"
		Line_Frame.Parent = Dropdown_Button
		Line_Frame.BackgroundColor3 = Color3.fromRGB(100,100,100)
		Line_Frame.BackgroundTransparency = 0
		Line_Frame.BorderSizePixel = 0
		Line_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
		Line_Frame.Position = UDim2.new(1, 0, 0.5, 0)
		Line_Frame.Size = UDim2.new(0, 4, 0, 30)

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 5)
		UICorner.Name = ""
		UICorner.Parent = Line_Frame

		if tablefound(defaultt,v) then 
			TextLabel_Button.TextColor3 = Color3.fromRGB(20,180,255)
			Line_Frame.BackgroundColor3 = Color3.fromRGB(20,180,255)
			Line_Frame.BackgroundTransparency = 0
			table.insert(MultiDropdownTable,v)
			TextLabe_DropDown.Text =  text.." : "..tostring(table.concat(MultiDropdownTable,","))
		end

		Dropdown_Button.MouseButton1Click:Connect(function()
			TweenService:Create(
				TextLabe_DropDown,
				TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()
			if tablefound(MultiDropdownTable,v) == false then 
				table.insert(MultiDropdownTable,v)
				TextLabel_Button.TextColor3 = Color3.fromRGB(20,180,255)
				Line_Frame.BackgroundColor3 = Color3.fromRGB(20,180,255)
				Line_Frame.BackgroundTransparency = 0
			else 
				for ine,va in pairs(MultiDropdownTable) do
					if va == v then
						table.remove(MultiDropdownTable,ine)
					end
				end
				TextLabel_Button.TextColor3 = Color3.fromRGB(100,100,100)
				Line_Frame.BackgroundColor3 = Color3.fromRGB(100,100,100)
				Line_Frame.BackgroundTransparency = 0
			end  
				TextLabe_DropDown.Text =  text.." : "..tostring(table.concat(MultiDropdownTable,","))
				callback(tostring(table.concat(MultiDropdownTable,",")))
				droptween = false
			end)
			Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20 )
		end

		Button_Drop.MouseButton1Click:Connect(function()
			if dog == false then
				TweenService:Create(
					Drop_Frame,
					TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 270, 0, FrameSize)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.4, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
					{Rotation = 90}
				):Play()
				Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20  )
			else
				TweenService:Create(
					Drop_Frame,
					TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{Size = UDim2.new(0, 270, 0, 35)} -- UDim2.new(0, 128, 0, 25)
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.4, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
					{Rotation = 0}
				):Play()
				Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20  )
			end
			dog = not dog
		end)
		Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20  )
		local dropfunc = {}

		-- Tween
		Drop_Frame.MouseEnter:Connect(function()
			if droptween == true then
				TweenService:Create(
					TextLabe_DropDown,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
					{TextColor3 = Color3.fromRGB(255,255,255)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(255,255,255)}
				):Play()
			end
		end)
		Drop_Frame.MouseLeave:Connect(function()
			if droptween == true then
				TweenService:Create(
					TextLabe_DropDown,
					TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
					{TextColor3 = Color3.fromRGB(100,100,100)}
				):Play()
				TweenService:Create(
					Icon,
					TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
					{ImageColor3 = Color3.fromRGB(100,100,100)}
				):Play()
			end
		end)

		function dropfunc:Clear()
			TextLabe_DropDown.Text = tostring(text).." :"
			TweenService:Create(
				TextLabe_DropDown,
				TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(100,100,100)}
			):Play()
			TweenService:Create(
				Icon,
				TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{ImageColor3 = Color3.fromRGB(100,100,100)}
			):Play()
			TweenService:Create(
				Drop_Frame,
				TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{Size = UDim2.new(0, 270, 0, 35)}
			):Play()
			TweenService:Create(
				Icon,
				TweenInfo.new(0.4, Enum.EasingStyle.Cubic, Enum.EasingDirection.Out),
				{Rotation = 0}
			):Play()
			dog = not dog
			droptween = true
			MultiDropdownTable = {}
			for i, v in next, Scrolling_Drop:GetChildren() do
				if v:IsA("Frame") then
					v:Destroy()
				end
			end
		end

		function dropfunc:Add(t)
			local Button_Frame = Instance.new("Frame")
			Button_Frame.Name = "ListFrame"
			Button_Frame.Parent = Scrolling_Drop
			Button_Frame.BackgroundColor3 = Color3.fromRGB(15,15,15)
			Button_Frame.BackgroundTransparency = 1
			Button_Frame.BorderSizePixel = 0
			Button_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
			Button_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
			Button_Frame.Size = UDim2.new(0, 250, 0, 30)

			local Dropdown_Button = Instance.new("TextButton")
			Dropdown_Button.Name = "Dropdwon_Button"
			Dropdown_Button.Parent = Button_Frame
			Dropdown_Button.AnchorPoint = Vector2.new(0.5, 0.5)
			Dropdown_Button.BackgroundColor3 = Color3.fromRGB(15,15,15)
			Dropdown_Button.BackgroundTransparency = 0
			Dropdown_Button.BorderSizePixel = 0
			Dropdown_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
			Dropdown_Button.Size = UDim2.new(0, 230, 0, 30)
			Dropdown_Button.Font = Enum.Font.GothamSemibold
			Dropdown_Button.TextColor3 = Color3.fromRGB(136, 136, 138)
			Dropdown_Button.TextSize = 14
			Dropdown_Button.TextXAlignment = Enum.TextXAlignment.Left
			Dropdown_Button.Text = ""

			local UICorner = Instance.new("UICorner")
			UICorner.CornerRadius = UDim.new(0, 5)
			UICorner.Name = ""
			UICorner.Parent = Dropdown_Button

			local TextLabel_Button = Instance.new("TextLabel")
			TextLabel_Button.Name = "TextLabel_TapDro2p"
			TextLabel_Button.Parent = Dropdown_Button
			TextLabel_Button.AnchorPoint = Vector2.new(0.5, 0.5)
			TextLabel_Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			TextLabel_Button.BackgroundTransparency = 1
			TextLabel_Button.Position = UDim2.new(0.5, 0, 0.5, 0)
			TextLabel_Button.Size = UDim2.new(0, 210, 0, 30)
			TextLabel_Button.Font = Enum.Font.GothamSemibold
			TextLabel_Button.TextColor3 = Color3.fromRGB(100,100,100)
			TextLabel_Button.TextSize = 14
			TextLabel_Button.TextXAlignment = Enum.TextXAlignment.Left
			TextLabel_Button.Text = tostring(t)

			local Line_Frame = Instance.new("Frame")
			Line_Frame.Name = "ListFrame"
			Line_Frame.Parent = Dropdown_Button
			Line_Frame.BackgroundColor3 = Color3.fromRGB(100,100,100)
			Line_Frame.BackgroundTransparency = 0
			Line_Frame.BorderSizePixel = 0
			Line_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
			Line_Frame.Position = UDim2.new(1, 0, 0.5, 0)
			Line_Frame.Size = UDim2.new(0, 4, 0, 30)

			local UICorner = Instance.new("UICorner")
			UICorner.CornerRadius = UDim.new(0, 5)
			UICorner.Name = ""
			UICorner.Parent = Line_Frame

		Dropdown_Button.MouseButton1Click:Connect(function()
			TweenService:Create(
				TextLabe_DropDown,
				TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()

			if tablefound(MultiDropdownTable,t) == false then 
				table.insert(MultiDropdownTable,t)
				TextLabel_Button.TextColor3 = Color3.fromRGB(20,180,255)
				Line_Frame.BackgroundColor3 = Color3.fromRGB(20,180,255)
				Line_Frame.BackgroundTransparency = 0
			else 
				for ine,va in pairs(MultiDropdownTable) do
					if va == t then
						table.remove(MultiDropdownTable,ine)
					end
				end
				TextLabel_Button.TextColor3 = Color3.fromRGB(100,100,100)
				Line_Frame.BackgroundColor3 = Color3.fromRGB(100,100,100)
				Line_Frame.BackgroundTransparency = 0
			end  
				TextLabe_DropDown.Text =  text.." : "..tostring(table.concat(MultiDropdownTable,","))
				callback(tostring(table.concat(MultiDropdownTable,",")))
				droptween = false
			end)
			Scrolling_Drop.CanvasSize = UDim2.new(0,0,0,UIListLayout.AbsoluteContentSize.Y + 20 )
		end
			return dropfunc
		end

	function Items:Slider(text,min,max,de,callback)
		local sliderfunc = {}
		local SliderFrame = Instance.new("Frame")
		SliderFrame.Name = "SliderFrame"
		SliderFrame.Parent = Page
		SliderFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		SliderFrame.BackgroundColor3 = Color3.fromRGB(22,22,22)
		SliderFrame.BackgroundTransparency = 0
		SliderFrame.ClipsDescendants = true
		SliderFrame.Position = UDim2.new(0.5, 0, 0.457317084, 0)
		SliderFrame.Size = UDim2.new(0, 250, 0, 45)

		local SliderFrame_UICorner = Instance.new("UICorner")
		SliderFrame_UICorner.Name = "SliderFrame_UICorner"
		SliderFrame_UICorner.Parent = SliderFrame
		SliderFrame_UICorner.CornerRadius = UDim.new(0, 5)

		local LabelNameSlider = Instance.new("TextLabel")
		LabelNameSlider.Name = "LabelNameSlider"
		LabelNameSlider.Parent = SliderFrame
		LabelNameSlider.AnchorPoint = Vector2.new(0.5, 0.5)
		LabelNameSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		LabelNameSlider.BackgroundTransparency = 1
		LabelNameSlider.BorderSizePixel = 0
		LabelNameSlider.Position = UDim2.new(0.5, 0, 0.35, 0)
		LabelNameSlider.Size = UDim2.new(0, 230, 0, 20)
		LabelNameSlider.Font = Enum.Font.GothamMedium
		LabelNameSlider.TextColor3 = Color3.fromRGB(100,100,100)
		LabelNameSlider.Text = tostring(text)
		LabelNameSlider.TextSize = 14
		LabelNameSlider.TextWrapped = true
		LabelNameSlider.TextXAlignment = Enum.TextXAlignment.Left

		local ShowValueFrame = Instance.new("Frame")
		ShowValueFrame.Name = "ShowValueFrame"
		ShowValueFrame.Parent = SliderFrame
		ShowValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		ShowValueFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
		ShowValueFrame.BorderSizePixel = 0
		ShowValueFrame.Position = UDim2.new(0.875, 0, 0.35, 0)
		ShowValueFrame.Size = UDim2.new(0, 50, 0, 18)

		local ShowValueFrameUICorner = Instance.new("UICorner")
		ShowValueFrameUICorner.CornerRadius = UDim.new(0, 4)
		ShowValueFrameUICorner.Name = "ShowValueFrameUICorner"
		ShowValueFrameUICorner.Parent = ShowValueFrame

		local CustomValue = Instance.new("TextBox")
		CustomValue.Name = "CustomValue"
		CustomValue.Parent = ShowValueFrame
		CustomValue.AnchorPoint = Vector2.new(0.5, 0.5)
		CustomValue.BackgroundColor3 = Color3.fromRGB(10,10,10)
		CustomValue.BackgroundTransparency = 1
		CustomValue.ClipsDescendants = true
		CustomValue.Position = UDim2.new(0.5, 0, 0.5, 0)
		CustomValue.Size = UDim2.new(0, 50, 0, 18)
		CustomValue.Font = Enum.Font.GothamMedium
		CustomValue.PlaceholderColor3 = Color3.fromRGB(222, 222, 222)
		CustomValue.TextSize = 12
		CustomValue.TextColor3 = Color3.fromRGB(100,100,100)
		CustomValue.Text =  tostring(de and math.floor((de / max) * (max - min) + min) or 0)

		local ValueFrame = Instance.new("Frame")
		ValueFrame.Name = "ValueFrame"
		ValueFrame.Parent = SliderFrame
		ValueFrame.AnchorPoint = Vector2.new(0.5, 0.5)
		ValueFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
		ValueFrame.BorderSizePixel = 0
		ValueFrame.Position = UDim2.new(0.499824077, 0, 0.800000012, 0)
		ValueFrame.Size = UDim2.new(0, 230, 0, 5)

		local Main_UiStroke = Instance.new("UIStroke")
		Main_UiStroke.Thickness = 1
		Main_UiStroke.Name = ""
		Main_UiStroke.Parent = ValueFrame
		Main_UiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
		Main_UiStroke.LineJoinMode = Enum.LineJoinMode.Round
		Main_UiStroke.Color = Color3.fromRGB(15,15,15)
		Main_UiStroke.Transparency = 0

		local ValueFrameUICorner = Instance.new("UICorner")
		ValueFrameUICorner.CornerRadius = UDim.new(0, 10)
		ValueFrameUICorner.Name = "ShowValueFrameUICorner"
		ValueFrameUICorner.Parent = ValueFrame

		local PartValue = Instance.new("Frame")
		PartValue.Name = "PartValue"
		PartValue.Parent = ValueFrame
		PartValue.Active = true
		PartValue.AnchorPoint = Vector2.new(0.5, 0.5)
		PartValue.BackgroundColor3 = Color3.fromRGB(10,10,10)
		PartValue.BackgroundTransparency = 1.000
		PartValue.Position = UDim2.new(0.498982757, 0, 0.300000012, 0)
		PartValue.Size = UDim2.new(0, 230, 0, 5)

		local MainValue = Instance.new("Frame")
		MainValue.Name = "MainValue"
		MainValue.Parent = PartValue
		MainValue.BackgroundColor3 = Color3.fromRGB(20,180,255)
		MainValue.Position = UDim2.new(0.00101725257, 0, 0.200000003, 0)
		MainValue.Size = UDim2.new((de or 0) / max, 0, 0, 5)
		MainValue.BorderSizePixel = 0

		local MainValueUICorner = Instance.new("UICorner")
		MainValueUICorner.CornerRadius = UDim.new(0, 10)
		MainValueUICorner.Name = "a"
		MainValueUICorner.Parent = MainValue

		local ConneValue = Instance.new("Frame")
		ConneValue.Name = "ConneValue"
		ConneValue.Parent = PartValue
		ConneValue.AnchorPoint = Vector2.new(0.5, 0.5)
		ConneValue.BackgroundColor3 = Color3.fromRGB(10,10,10)
		ConneValue.Position = UDim2.new((de or 0)/max, 0.5, 0.6,0, 0)
		ConneValue.Size = UDim2.new(0, 0, 0, 0)
		ConneValue.BorderSizePixel = 0

		local UICorner = Instance.new("UICorner")
		UICorner.CornerRadius = UDim.new(0, 300)
		UICorner.Parent = ConneValue

		local function move(input)
			local pos =
				UDim2.new(
					math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
					0,
					0.6,
					0
				)
			local pos1 =
				UDim2.new(
					math.clamp((input.Position.X - ValueFrame.AbsolutePosition.X) / ValueFrame.AbsoluteSize.X, 0, 1),
					0,
					0,
					5
				)
			MainValue:TweenSize(pos1, "Out", "Sine", 0.2, true)
			ConneValue:TweenPosition(pos, "Out", "Sine", 0.2, true)
			local value = math.floor(((pos.X.Scale * max) / max) * (max - min) + min)
			CustomValue.Text = tostring(value)
			callback(value)
		end
		local dragging = false
		ConneValue.InputBegan:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
				end
			end)
		ConneValue.InputEnded:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
		SliderFrame.InputBegan:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
				end
			end)
		SliderFrame.InputEnded:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
		ValueFrame.InputBegan:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = true
				end
			end)
		ValueFrame.InputEnded:Connect(
			function(input)
				if input.UserInputType == Enum.UserInputType.MouseButton1 then
					dragging = false
				end
			end)
		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
				move(input)
			end
		end)
		CustomValue.FocusLost:Connect(function()
			if CustomValue.Text == "" then
				CustomValue.Text  = de
			end
			if  tonumber(CustomValue.Text) > max then
				CustomValue.Text  = max
			end
			MainValue:TweenSize(UDim2.new((CustomValue.Text or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
			ConneValue:TweenPosition(UDim2.new((CustomValue.Text or 0)/max, 0,0.6, 0) , "Out", "Sine", 0.2, true)
			CustomValue.Text = tostring(CustomValue.Text and math.floor( (CustomValue.Text / max) * (max - min) + min) )
			pcall(callback, CustomValue.Text)
		end)
		-- Tween
		SliderFrame.MouseEnter:Connect(function()
			TweenService:Create(
				LabelNameSlider,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()
			TweenService:Create(
				CustomValue,
				TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()
		end)
		SliderFrame.MouseLeave:Connect(function()
			TweenService:Create(
				LabelNameSlider,
				TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out,0.1),
				{TextColor3 = Color3.fromRGB(100,100,100)}
			):Play()
			TweenService:Create(
				CustomValue,
				TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(100,100,100)}
			):Play()
		end)
		function sliderfunc:Update(value)
			MainValue:TweenSize(UDim2.new((value or 0) / max, 0, 0, 5), "Out", "Sine", 0.2, true)
			CustomValue.Text = value
			pcall(function()
				callback(value)
			end)
		end
			return sliderfunc
		end

	function Items:Textbox(text,text2,callback)
		local TextBox_Frame = Instance.new("Frame")
		TextBox_Frame.Name = "TextFrame"
		TextBox_Frame.Parent = Page
		TextBox_Frame.Active = true
		TextBox_Frame.AnchorPoint = Vector2.new(0.5, 0.5)
		TextBox_Frame.BackgroundColor3 = Color3.fromRGB(111,111,111)
		TextBox_Frame.BackgroundTransparency = 1
		TextBox_Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
		TextBox_Frame.Size = UDim2.new(0, 250, 0, 55)
		TextBox_Frame.ClipsDescendants = true

		local Label_Name = Instance.new("TextLabel")
		Label_Name.Name = "LabelNameSliderxd"
		Label_Name.Parent = TextBox_Frame
		Label_Name.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
		Label_Name.AnchorPoint = Vector2.new(0.5, 0.5)
		Label_Name.Position = UDim2.new(0.5, 0, 0.25, 0)
		Label_Name.BackgroundTransparency = 1
		Label_Name.BorderSizePixel = 0
		Label_Name.Size = UDim2.new(0, 250, 0, 25)
		Label_Name.Font = Enum.Font.GothamMedium
		Label_Name.TextColor3 = Color3.fromRGB(255,255,255)
		Label_Name.TextSize = 14
		Label_Name.TextTransparency = 0
		Label_Name.Text = tostring(text)
		Label_Name.TextXAlignment = Enum.TextXAlignment.Left

		local UiConer = Instance.new("UICorner")
		UiConer.CornerRadius = UDim.new(0, 4)
		UiConer.Name = "ConerTextBox"
		UiConer.Parent = TextBox_Frame

		local Frame_Box = Instance.new("Frame")
		Frame_Box.Name = "FrameBox"
		Frame_Box.Parent = TextBox_Frame
		Frame_Box.AnchorPoint = Vector2.new(0.5, 0.5)
		Frame_Box.BackgroundColor3 = Color3.fromRGB(22,22,22)
		Frame_Box.BackgroundTransparency = 0
		Frame_Box.BorderSizePixel = 1
		Frame_Box.ClipsDescendants = true
		Frame_Box.Position = UDim2.new(0.5, 0, 0.725, 0)
		Frame_Box.Size = UDim2.new(0, 250, 0, 30)

		local UiConer = Instance.new("UICorner")
		UiConer.CornerRadius = UDim.new(0, 5)
		UiConer.Name = "ConerTextBox2"
		UiConer.Parent = Frame_Box

		local TextFrame2 = Instance.new("TextBox")
		TextFrame2.Name = "TextFrame2"
		TextFrame2.Parent = TextBox_Frame
		TextFrame2.AnchorPoint = Vector2.new(0.5, 0.5)
		TextFrame2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		TextFrame2.BackgroundTransparency = 1
		TextFrame2.BorderSizePixel = 0
		TextFrame2.ClipsDescendants = true
		TextFrame2.Position = UDim2.new(0.5, 0, 0.725, 0)
		TextFrame2.Size = UDim2.new(0, 230, 0, 35)
		TextFrame2.Font = Enum.Font.GothamMedium
		TextFrame2.PlaceholderText = text2
		TextFrame2.PlaceholderColor3 = Color3.fromRGB(100,100,100)
		TextFrame2.TextColor3 = Color3.fromRGB(100,100,100)
		TextFrame2.TextSize = 14
		TextFrame2.TextXAlignment = Enum.TextXAlignment.Left
		
		Frame_Box.MouseEnter:Connect(function()
			TweenService:Create(
				TextFrame2,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()
			TweenService:Create(
				TextFrame2,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{PlaceholderColor3 = Color3.fromRGB(20,180,255)}
			):Play()
		end)
		Frame_Box.MouseLeave:Connect(function()
			TweenService:Create(
				TextFrame2,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(100,100,100)}
			):Play()
			TweenService:Create(
				TextFrame2,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{PlaceholderColor3 = Color3.fromRGB(100,100,100)}
			):Play()
		end)
		Label_Name.MouseEnter:Connect(function()
			TweenService:Create(
				Label_Name,
				TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(20,180,255)}
			):Play()
		end)
		Label_Name.MouseLeave:Connect(function()
			TweenService:Create(
				Label_Name,
				TweenInfo.new(0.4, Enum.EasingStyle.Linear, Enum.EasingDirection.Out),
				{TextColor3 = Color3.fromRGB(255,255,255)}
			):Play()
		end)
		TextFrame2.FocusLost:Connect(function()
			if #TextFrame2.Text > 0 then
				pcall(callback,TextFrame2.Text)
				end
			end)
		end

------------------
    return Items
end
    return Page
end
    return Tab
end
------------------

return window 
